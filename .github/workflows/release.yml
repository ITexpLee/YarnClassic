name: Release

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  # TODO: write a job to update version
  #
  # update-version:

  build:
    strategy:
      matrix:
        include:
          # - os: windows-latest
          #   build-task: build-windows
          #   artifact_name: ./electron/dist/Yarn Editor Setup ${{ steps.package-version.outputs.version }}.exe
          - os: ubuntu-latest
            build-task: build-linux
            artifact_file: ./electron/dist/yarn-editor_${{ github.ref }}_amd64.snap
            artifact_name: Yarn-editor_${{ github.ref }}_amd64.snap
          # - os: macos-latest
          #   artifact_name: mything
          #   asset_name: mything-macos-amd64

    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - run: npm ci

    - name: npm install and build
      run: cd electron && yarn install && yarn run ${{ matrix.build-task }}
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    # - name: Read package.json
    #   uses: tyankatsu0105/read-package-version-actions@v1
    #   id: package-version

    # - name: Archive production artifacts
    #   if: github.event_name == 'push'
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: Windows - Yarn Editor Setup ${{ steps.package-version.outputs.version }}.exe
    #     path: ./electron/dist/Yarn Editor Setup ${{ steps.package-version.outputs.version }}.exe
    #   env:
    #     GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ matrix.artifact_file }}
        asset_name: ${{ matrix.artifact_name }}
        tag: ${{ github.ref }}

  # build-linux:
  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [12.x]

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js 12.x
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 12.x

  #   - run: npm ci

  #   - name: npm install and build
  #     run: cd electron && yarn install && yarn run build-linux
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}

  #   - name: Read package.json
  #     uses: tyankatsu0105/read-package-version-actions@v1
  #     id: package-version

  #   - name: Archive production artifacts
  #     if: github.event_name == 'push'
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: Linux - yarn-editor_${{ steps.package-version.outputs.version }}_amd64.snap
  #       path: ./electron/dist/yarn-editor_${{ steps.package-version.outputs.version }}_amd64.snap
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}

  # build-mac:
  #   runs-on: macos-latest

  #   strategy:
  #     matrix:
  #       node-version: [12.x]

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v2

  #   - name: Use Node.js 12.x
  #     uses: actions/setup-node@v1
  #     with:
  #       node-version: 12.x

  #   - run: npm ci

  #   - name: npm install and build
  #     run: cd electron && yarn install && yarn run build-mac
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}

  #   - name: Read package.json
  #     uses: tyankatsu0105/read-package-version-actions@v1
  #     id: package-version

  #   - name: Archive production artifacts
  #     if: github.event_name == 'push'
  #     uses: actions/upload-artifact@v1
  #     with:
  #       name: Mac - Yarn Editor-${{ steps.package-version.outputs.version }}.dmg
  #       path: ./electron/dist/Yarn Editor-${{ steps.package-version.outputs.version }}.dmg
  #     env:
  #       GH_TOKEN: ${{ secrets.GH_TOKEN }}
